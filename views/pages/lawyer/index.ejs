<%- include('../../partials/header.ejs') %>
<%- include('../../components/lawyer-header.ejs', user) %>
<%- include('../../components/calendar-appointment.ejs') %>

<div class="ledgerContent" x-data="LegalCaseManagement(<%= JSON.stringify(ledgers) %>, <%= JSON.stringify(ledgersGroup) %>)">
  <div class="type-ledger">
    <button class="onglet active" @click="checkIsActive($el)">
      My Ledgers (<span class="count" x-text="legalCases.length"></span>)
    </button>
    <button class="onglet" @click="checkIsActive($el)">
      Team Ledgers (<span class="count" x-text="ledgersGroups.length"></span>)
    </button>
    <button class="onglet" @click="checkIsActive($el)">My Stats</button>
  </div>

  <ul class="content active">
    <%- include('../../components/search-field') %>
    <template x-for="ledger in filteredLegalCases" :key="ledger.id">
      <li class="ledger-item">
        <input type="checkbox">
        <p x-text="ledger.legalCase.title"></p>
        <button class="status-legder" x-text="ledger.legalCase.status"></button>
        <p x-text="ledger.legalCase.urgency"></p>
        <p x-text="ledger.legalCase.priority"></p>
        <button class="btn-transparent elipse" @click="toggleDropdown(ledger.id)">⋮</button>
        <%- include('../../components/dropdown-ledger.ejs') %>
      </li>
    </template>
    <template x-if="filteredLegalCases().length == 0">
      <div class="not-found-ledger">
        <h4>Aucun dossier trouver avec <a href="http://google.com" x-text="searchQuery"></a> les titres ou informations </h4>
      </div>
    </template>
  </ul>

  <ul class="content">
    <template x-for="ledgersGroup in ledgersGroups">
      <li class="ledger-item">
        <input type="checkbox">
        <p x-text="ledgersGroup.legalCase.title"></p>
        <button class="status-legder" x-text="ledgersGroup.legalCase.status"></button>
        <button x-text="ledgersGroup.legalCase.urgency"></button>
        <p x-text="ledgersGroup.legalCase.priority"></p>
        <button class="btn-transparent elipse" @click="toggleDropdown(ledgersGroup.legalCase.id)">⋮</button>
        <%- include('../../components/dropdown-ledger.ejs') %>
      </li>
    </template>
        <template x-if="ledgersGroups.length == 0">
      <div class="not-found-ledger">
        <h4>Aucun dossier est assigned a vos groupes </h4>
      </div>
    </template>
  </ul>
  <ul class="content">
    my stats
  </ul>
</div>
<div class="teams-container">
  <h2>Team your are is member</h2>
  <% groups.forEach(group => { %>
   <div class="group-item">
      <h4 class="name-group"><%= group.name  %></h4>
      <div class="member-avatar-list">
        <% group.members.forEach(member => { %>
          <img src="/avatars/<%= member.user.avatarUrl %>" alt="<%= member.user.firstName %>">
        <% }) %>
      </div>
      <button class="btn-transparent" type="button">⋮</button>
   </div>
  <% }) %>

</div>
<dialog class="modal">
  <div class="modal-header">
    <h3>Rendez-vous</h3>
    <button class="btn-transparent close" hx-on:click="document.querySelector('.modal').close()">&times;</button>
  </div>
  <form class="form" action="/appointments/new" method="post">
    <% inputsAppointments.forEach(input => { %>
    <%- include('../../components/input', input) %>
    <% }) %>
    <button type="submit">Fixe</button>
  </form>
</dialog>
<script>
  function LegalCaseManagement(propos, propos2) {
    return {
      searchQuery: '',
      legalCases: propos.data,
      ledgersGroups: propos2,
      activeDropdown: null,
      modal: document.querySelector('.modal'),

      toggleDropdown(ledgerId) {
        this.activeDropdown = this.activeDropdown === ledgerId ? null : ledgerId;
      },

      checkIsActive(value) {
        const onglets = Array.from(document.querySelectorAll('.onglet'))
        const contentOnglets = document.querySelectorAll('.content')
        const status = 'active'

        onglets.forEach(ong => (ong !== value) ?
          ong.classList.remove(status) :
          ong.classList.add(status))
        contentOnglets.forEach((content, index) =>
          (index !== onglets.indexOf(value)) ?
          content.classList.remove(status) :
          content.classList.add(status)
        )
      },
      openModal() {
        this.modal.showModal()
      },
      filteredLegalCases() {
        const searchTerm = this.searchQuery.toLowerCase();
        return this.legalCases.filter(legalCase => ['title', 'status', 'urgency'].some(prop =>
          legalCase.legalCase[prop].toLowerCase().includes(searchTerm)))
      },
    }
  }
</script>
</body>

</html>