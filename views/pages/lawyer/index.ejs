<%- include('../../partials/header.ejs') %>
<style>
*, *::before, *::after{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
  li{
    list-style: none;
  }
  button{
    appearance: button;
    border: none;
  }

  .onglet{
    width: 100px;
    height: 40px;
    cursor: pointer;
  }
  .onglet.active {
    background-color: red;
  }

  .content {
    display: none;
    border: 1px solid red;
    margin: .5rem 0;
    padding: 1rem;
  }

  .content.active {
    display: block;
  }

  .ledgerContent{
    width: 80%;
    margin: 0 auto;
  }

  .content, .type-ledger{
    width: 100%;
  }
  .type-ledger{
    padding: .5rem;
    border: 1px solid red;

  }
  .ledger-item{
    width: 100%;
    height: 40px;
    border: 1px solid red;
    position: relative;
    margin: .5rem 0;
  }

  .ledger-item .dropdown{
    border: 1px solid red;
    background-color: red;
    position: absolute;
    right: 0;
    z-index: 2;
  }

</style>
<div class="ledgerContent" x-data="LegalCaseManagement(<%= JSON.stringify(ledgers) %>, <%= JSON.stringify(ledgersGroup) %>)">
  <div class="type-ledger">
    <button class="onglet active" @click="checkIsActive($el)">
      My Ledgers (<span class="count" x-text="legalCases.length"></span>)
    </button>
    <button class="onglet" @click="checkIsActive($el)">
      Team Ledgers (<span class="count" x-text="ledgersGroups.length"></span>)
    </button>
    <button class="onglet" @click="checkIsActive($el)">My Stats</button>
  </div>
  <ul class="content active">
    <input type="search" x-model="searchQuery">
    <template x-for="ledger in filteredLegalCases" :key="ledger.id">
      <li class="ledger-item">
        <input type="checkbox">
        <span x-text="ledger.legalCase.title"></span>
        <span x-text="ledger.legalCase.status"></span>
        <span x-text="ledger.legalCase.urgency"></span>
        <span x-text="ledger.legalCase.priority"></span>
        <button @click="toggleDropdown(ledger.id)">:</button>
        <div class="dropdown" x-show="activeDropdown === ledger.id" @click.outside="activeDropdown = null">
          <ul>
            <li>Fixe un rendez-vous</li>
            <li>Ajouter les element au dossier</li>
            <li>Demande de revision</li>
            <li>Completer le dossier</li>
            <li>Archiver le dossier</li>
          </ul>
        </div>
      </li>

    </template>
  </ul>
  <ul class="content">
    <template x-for="ledgersGroup in ledgersGroups">
      <li>
        <span x-text="ledgersGroup.legalCase.title"></span>
        <span x-text="ledgersGroup.legalCase.status"></span>
        <span x-text="ledgersGroup.legalCase.urgency"></span>
        <span x-text="ledgersGroup.legalCase.priority"></span>
      </li>
    </template>
  </ul>
  <ul class="content">
    my stats
  </ul>
</div>
<dialog>
  <form action="/appointments/new" method="post">
    <% inputsAppointments.forEach(input => { %>
    <%- include('../../components/input', input) %>
    <% }) %>
    <label for="week">What week would you like to start?</label><br>
    <input id="week" type="week" name="week" />
    <button type="submit">Fixe</button>
  </form>
</dialog>
<script>
  function LegalCaseManagement(propos, propos2) {
    return {
      searchQuery: '',
      legalCases: propos.data,
      ledgersGroups: propos2,
      activeDropdown: null,

      toggleDropdown(ledgerId) {
        this.activeDropdown = this.activeDropdown === ledgerId ? null : ledgerId;
      },
      checkIsActive(value) {
        const onglets = Array.from(document.querySelectorAll('.onglet'))
        const contentOnglets = document.querySelectorAll('.content')
        const status = 'active'

        onglets.forEach(ong => (ong !== value) ?
          ong.classList.remove(status) :
          ong.classList.add(status))
        contentOnglets.forEach((content, index) =>
          (index !== onglets.indexOf(value)) ?
          content.classList.remove(status) :
          content.classList.add(status)
        )
      },


      filteredLegalCases() {
        const searchTerm = this.searchQuery.toLowerCase();
        return this.legalCases.filter(legalCase => ['title', 'status', 'urgency'].some(prop => legalCase.legalCase[prop].toLowerCase().includes(searchTerm)))
      }
    }
  }
</script>
</body>

</html>